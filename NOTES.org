#+TITLE: activities.el Notes

* Issues
:PROPERTIES:
:VISIBILITY: children
:END:

** TODO Consider storing buffer lists in activities' ~etc~ slot

The challenge is that that slot would get serialized with the activity, so we'd need to nullify it before saving.  But since we persist the same objects that are in memory, doing so would wipe it out while the user's still using it.  We'd probably need to have some kind of pre/post serialize functions that would save the value, nullify it, and then restore it after saving.  Kind of awkward, but maybe less so than having one implementation for frames and another for tabs.

** TODO [#B] Optionally save/restore ~tab-line~ buffers
:LOGBOOK:
- State "TODO"       from              [2024-01-24 Wed 16:58]
:END:

e.g. useful for having a ~deffy-project~ buffer available for jumping while not being displayed.

** UNDERWAY Track buffers shown in a tab/frame and optionally kill 
:LOGBOOK:
- State "UNDERWAY"   from "TODO"       [2024-02-16 Fri 00:23]
- State "TODO"       from              [2024-02-13 Tue 12:26]
:END:

+ Branch :: wip/kill-buffers

If we can track which buffers are shown only in an activity's frame/tab, they could optionally be killed when the activity is suspended.

+ [2024-02-16 Fri 00:23] Seems to be working, even in tabs mode, with the function I added to ~window-configuration-change-hook~.

** TODO Multiple named states
:LOGBOOK:
- State "TODO"       from              [2024-01-24 Wed 17:05]
:END:

Could be helpful.  The default and last state should just be entries in an activity's states map.

** TODO Hierarchical states
:LOGBOOK:
- State "TODO"       from              [2024-02-13 Tue 11:25]
:END:

e.g. if working on a project involved multiple git repos, each having its own activity, and one wanted to resume working on the project as a whole, it would be helpful if there were a parent activity for the project as a whole, and resuming that parent activity would resume the sub-activity that was last active.

** TODO Consider having project-specific activities
:LOGBOOK:
- State "TODO"       from              [2024-01-24 Wed 21:31]
:END:

e.g. pressing ~C-x p a~ could open a default activity for a project (perhaps with some of the metadata stored in the project directory?).  The idea would be to save the user from having to manually make an activity for a project.  Various hooks could probably solve this integration.  (Thanks to Joseph Turner for the idea.)
** TODO Mascot 
:LOGBOOK:
- State "TODO"       from              [2024-02-13 Tue 16:17]
:END:

+ Seal ::
  - [[https://duckduckgo.com/?t=ftsa&q=sea+lion+illustration&iax=images&ia=images&iaf=license%3AModifyCommercially&iai=http%3A%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fb%2Fb9%2FNew_Zealand_Sea_Lion.jpg][DDG "sea lion illustration"]]
  - [[https://digitalcollections.nypl.org/search/index?utf8=%E2%9C%93&keywords=sea+lion#][NYPL "sea lion"]]
  - [[https://commons.wikimedia.org/wiki/Category:Zalophus_californianus_(illustrations)][Category:Zalophus californianus (illustrations) - Wikimedia Commons]]
  - [[https://commons.wikimedia.org/wiki/Category:Sea_lions_in_art][Category:Sea lions in art - Wikimedia Commons]]

** DONE [#A] An activity's last state might be saved at an undesirable moment
CLOSED: [2024-02-13 Tue 11:23]
:LOGBOOK:
- State "DONE"       from "UNDERWAY"   [2024-02-13 Tue 11:23] \\
  Fixed in 54522cb546bb61d8608b6c3e814f326b7fb0a3ee.
- State "UNDERWAY"   from "TODO"       [2024-02-01 Thu 00:58]
- State "TODO"       from              [2024-01-24 Wed 01:13]
:END:

For example, if I have an activity that has some Ement rooms displayed, and then ~ement-disconnect~, the room buffers are killed, leaving the windows displaying, e.g. the scratch buffer.  Then the activity is automatically saved, and when it's resumed, it shows the scratch buffer, requiring the user to manually reset the activity.

+ Scenarios ::
  - [X] Backtrace being displayed
  - [X] Minibuffer is active
  - [ ] Any non-bookmarkable, non-file-backed buffer is being displayed
    * Not sure if this is worthy of a default predicate.

+ Solution :: List of "anti-save" predicates: if any return non-nil, activity is not saved.

